apply plugin: 'com.android.application'
def VERSION = "1.3.1"
android {
//    lintOptions {
//        lintConfig
//    }
    compileOptions {
        incremental true
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "com.wkswind.demo"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 4

        versionName VERSION
        setProperty("archivesBaseName", "cqxx-$versionName-$versionCode")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {

        }
        release {
            v2SigningEnabled false
            storeFile file(readProperty("key.store", "key.store"))
            keyAlias readProperty("key.alias", "key.alias")
            keyPassword readProperty("key.alias.password", "key.alias.password")
            storePassword readProperty("key.store.password", "key.store.password")
        }
    }

    buildTypes {
//        debug {
//            versionNameSuffix ".debug"
//        }
//        debug {
//            buildConfigField("String","CHANNEL","\"DEBUG\"")
//            buildConfigField("String","DOWNLOAD_URL","\"https://l.pic.wemepi.com/data.x/spread/app/cqxx/00001037.apk?t=1479354618\"")
//        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
//            v2SigningEnabled false
        }

    }

    def file = new File("./demo/flavors.txt");
    def map = [:];
    file.eachLine { line ->
        def array = line.split("#")
        if (array.length == 2) {
            def name = array[0]
            def url = array[1]
            map.put(name, url)
        }

    }

    productFlavors {
        map.each { name, value ->
            "$name" {
                targetSdkVersion 22
                applicationId "com.weme.group.sd.plugin"
//                applicationId "com.weme.group.sd.plugin.C$name"
                buildConfigField("String", "CHANNEL_NAME", "\"$name\"")
                buildConfigField("String", "DOWNLOAD_URL", "\"$value\"")
            }
        }
    }


}

def readProperty(key, defaultValue) {
    def value = System.getenv(key)
    if (value != null && value.length() > 0) {
        println "$key, $value"
        return value
    }

    if (project.hasProperty(key)) {
        return project.property(key)
    }
    return defaultValue
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':Libraries:DroidPlugin')
    //    compile 'org.apache.commons:commons-io:1.3.2'
    //    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha8'
    //    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.liulishuo.filedownloader:library:1.3.0'
    compile 'io.reactivex:rxjava:1.2.2'
    compile 'io.reactivex:rxandroid:1.2.1'
//    compile 'com.squareup.okhttp3:okhttp:3.4.2'
    //    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha8'
    testCompile 'junit:junit:4.12'
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.9.0@aar'

//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
//    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
//    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
}
